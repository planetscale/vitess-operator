apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: vitesscells.planetscale.com
spec:
  group: planetscale.com
  names:
    kind: VitessCell
    listKind: VitessCellList
    plural: vitesscells
    shortNames:
    - vtc
    singular: vitesscell
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            allCells:
              description: AllCells is a list of all cells in the Vitess cluster.
              items:
                type: string
              type: array
            extraVitessFlags:
              additionalProperties:
                type: string
              description: ExtraVitessFlags is inherited from the parent's VitessClusterSpec.
              type: object
            gateway:
              description: Gateway configures the Vitess Gateway deployment in this
                cell.
              properties:
                affinity:
                  description: 'Affinity allows you to set rules that constrain the
                    scheduling of your vtgate pods. WARNING: These affinity rules
                    will override all default affinities that we set; in turn, we
                    can''t guarantee optimal scheduling of your pods if you choose
                    to set this field.'
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  description: Annotations can optionally be used to attach custom
                    annotations to Pods created for this component. These will be
                    attached to the underlying pods that the vtgate deployment creates.
                  type: object
                authentication:
                  description: Authentication configures how Vitess Gateway authenticates
                    MySQL client connections.
                  properties:
                    static:
                      description: Static configures vtgate to use a static file containing
                        usernames and passwords.
                      properties:
                        secret:
                          description: Secret configures vtgate to load the static
                            auth file from a given key in a given Secret.
                          properties:
                            key:
                              description: Key is the name of the item within the
                                data source to use as the value.  For a Kubernetes
                                Secret object (specified with the 'name' field), this
                                is the key within the 'data' map.  When 'volumeName'
                                is used, this specifies the name of the file to load
                                within that Volume.
                              type: string
                            name:
                              description: Name is the name of a Kubernetes Secret
                                object to use as the data source. The Secret must
                                be in the same namespace as the VitessCluster.  The
                                'key' field defines the item to pick from the Secret
                                object's 'data' map.  If a Secret name is not specified,
                                the data source must be defined with the 'volumeName'
                                field instead.
                              type: string
                            volumeName:
                              description: VolumeName directly specifies the name
                                of a Volume in each Pod that should be mounted. You
                                must ensure a Volume by that name exists in all relevant
                                Pods, such as by using the appropriate ExtraVolumes
                                fields. If specified, this takes precedence over the
                                'name' field.  The 'key' field defines the name of
                                the file to load within this Volume.
                              type: string
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                extraEnv:
                  description: ExtraEnv can optionally be used to override default
                    environment variables set by the operator, or pass additional
                    environment variables.
                  items:
                    type: object
                  type: array
                extraFlags:
                  additionalProperties:
                    type: string
                  description: 'ExtraFlags can optionally be used to override default
                    flags set by the operator, or pass additional flags to vtgate.
                    All entries must be key-value string pairs of the form "flag":
                    "value". The flag name should not have any prefix (just "flag",
                    not "-flag"). To set a boolean flag, set the string value to either
                    "true" or "false".'
                  type: object
                extraVolumeMounts:
                  description: ExtraVolumeMounts can optionally be used to override
                    default Pod volumeMounts defined by the operator, or specify additional
                    mounts. Typically, these are used to mount volumes defined through
                    extraVolumes.
                  items:
                    type: object
                  type: array
                extraVolumes:
                  description: ExtraVolumes can optionally be used to override default
                    Pod volumes defined by the operator, or provide additional volumes
                    to the Pod. Note that when adding a new volume, you should usually
                    also add a volumeMount to specify where in each container's filesystem
                    the volume should be mounted.
                  items:
                    type: object
                  type: array
                initContainers:
                  description: InitContainers can optionally be used to supply extra
                    init containers that will be run to completion one after another
                    before any app containers are started.
                  items:
                    type: object
                  type: array
                replicas:
                  description: Replicas is the number of vtgate instances to deploy
                    in this cell.
                  format: int32
                  minimum: 0
                  type: integer
                resources:
                  description: Resources determines the compute resources reserved
                    for each vtgate replica.
                  type: object
                secureTransport:
                  description: SecureTransport configures secure transport connections
                    for vtgate.
                  properties:
                    required:
                      description: Required configures vtgate to reject non-secure
                        transport connections. Applies only to MySQL protocol connections.
                        All GRPC transport is required to be encrypted when certs
                        are set.
                      type: boolean
                    tls:
                      description: TLS configures vtgate to use TLS encrypted transport.
                      properties:
                        certSecret:
                          description: CertSecret configures vtgate to load the TLS
                            cert PEM file from a given key in a given Secret.
                          properties:
                            key:
                              description: Key is the name of the item within the
                                data source to use as the value.  For a Kubernetes
                                Secret object (specified with the 'name' field), this
                                is the key within the 'data' map.  When 'volumeName'
                                is used, this specifies the name of the file to load
                                within that Volume.
                              type: string
                            name:
                              description: Name is the name of a Kubernetes Secret
                                object to use as the data source. The Secret must
                                be in the same namespace as the VitessCluster.  The
                                'key' field defines the item to pick from the Secret
                                object's 'data' map.  If a Secret name is not specified,
                                the data source must be defined with the 'volumeName'
                                field instead.
                              type: string
                            volumeName:
                              description: VolumeName directly specifies the name
                                of a Volume in each Pod that should be mounted. You
                                must ensure a Volume by that name exists in all relevant
                                Pods, such as by using the appropriate ExtraVolumes
                                fields. If specified, this takes precedence over the
                                'name' field.  The 'key' field defines the name of
                                the file to load within this Volume.
                              type: string
                          required:
                          - key
                          type: object
                        clientCACertSecret:
                          description: ClientCACertSecret configures vtgate to load
                            the TLS certificate authority PEM file from a given key
                            in a given Secret. If specified, checks client certificates
                            are signed by this CA certificate. Optional.
                          properties:
                            key:
                              description: Key is the name of the item within the
                                data source to use as the value.  For a Kubernetes
                                Secret object (specified with the 'name' field), this
                                is the key within the 'data' map.  When 'volumeName'
                                is used, this specifies the name of the file to load
                                within that Volume.
                              type: string
                            name:
                              description: Name is the name of a Kubernetes Secret
                                object to use as the data source. The Secret must
                                be in the same namespace as the VitessCluster.  The
                                'key' field defines the item to pick from the Secret
                                object's 'data' map.  If a Secret name is not specified,
                                the data source must be defined with the 'volumeName'
                                field instead.
                              type: string
                            volumeName:
                              description: VolumeName directly specifies the name
                                of a Volume in each Pod that should be mounted. You
                                must ensure a Volume by that name exists in all relevant
                                Pods, such as by using the appropriate ExtraVolumes
                                fields. If specified, this takes precedence over the
                                'name' field.  The 'key' field defines the name of
                                the file to load within this Volume.
                              type: string
                          required:
                          - key
                          type: object
                        keySecret:
                          description: KeySecret configures vtgate to load the TLS
                            key PEM file from a given key in a given Secret.
                          properties:
                            key:
                              description: Key is the name of the item within the
                                data source to use as the value.  For a Kubernetes
                                Secret object (specified with the 'name' field), this
                                is the key within the 'data' map.  When 'volumeName'
                                is used, this specifies the name of the file to load
                                within that Volume.
                              type: string
                            name:
                              description: Name is the name of a Kubernetes Secret
                                object to use as the data source. The Secret must
                                be in the same namespace as the VitessCluster.  The
                                'key' field defines the item to pick from the Secret
                                object's 'data' map.  If a Secret name is not specified,
                                the data source must be defined with the 'volumeName'
                                field instead.
                              type: string
                            volumeName:
                              description: VolumeName directly specifies the name
                                of a Volume in each Pod that should be mounted. You
                                must ensure a Volume by that name exists in all relevant
                                Pods, such as by using the appropriate ExtraVolumes
                                fields. If specified, this takes precedence over the
                                'name' field.  The 'key' field defines the name of
                                the file to load within this Volume.
                              type: string
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              type: object
            globalLockserver:
              description: GlobalLockserver are the params to connect to the global
                lockserver.
              properties:
                address:
                  description: Address is the host:port of the lockserver client endpoint.
                  type: string
                implementation:
                  description: Implementation specifies which Vitess "topo" plugin
                    to use.
                  type: string
                rootPath:
                  description: RootPath is a path prefix for all lockserver data belonging
                    to a given Vitess cluster. Multiple Vitess clusters can share
                    a lockserver as long as they have unique root paths.
                  type: string
              required:
              - implementation
              - address
              - rootPath
              type: object
            imagePullPolicies:
              description: ImagePullPolicies are inherited from the VitessCluster
                spec.
              properties:
                mysqld:
                  description: Mysqld is the container image pull policy to use for
                    mysqld.
                  type: string
                mysqldExporter:
                  description: MysqldExporter is the container image pull policy to
                    use for mysqld-exporter.
                  type: string
                vtbackup:
                  description: Vtbackup is the container image pull policy to use
                    for Vitess Backup jobs.
                  type: string
                vtctld:
                  description: Vtctld is the container image pull policy to use for
                    Vitess Dashboard instances.
                  type: string
                vtgate:
                  description: Vtgate is the container image pull policy to use for
                    Vitess Gateway instances.
                  type: string
                vttablet:
                  description: Vttablet is the container image pull policy to use
                    for Vitess Tablet instances.
                  type: string
              type: object
            images:
              description: Images are not customizable by users at the cell level
                because version skew across the cluster is discouraged except during
                rolling updates, in which case this field is automatically managed
                by the VitessCluster controller that owns this VitessCell.
              properties:
                vtgate:
                  description: Vtgate is the container image (including version tag)
                    to use for Vitess Gateway instances.
                  type: string
              type: object
            lockserver:
              description: 'Lockserver specifies either a deployed or external lockserver
                to be used as the Vitess cell-local topology store. Default: Put this
                cell''s topology data in the global lockserver instead of its own
                lockserver.'
              properties:
                etcd:
                  description: Etcd deploys our own etcd cluster as a lockserver.
                  properties:
                    affinity:
                      description: 'Affinity allows you to set rules that constrain
                        the scheduling of your Etcd pods. WARNING: These affinity
                        rules will override all default affinities that we set; in
                        turn, we can''t guarantee optimal scheduling of your pods
                        if you choose to set this field.'
                      type: object
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations can optionally be used to attach custom
                        annotations to Pods created for this component.
                      type: object
                    dataVolumeClaimTemplate:
                      description: 'DataVolumeClaimTemplate configures the PersistentVolumeClaims
                        that will be created for each etcd instance to store its data
                        files. This field is required.  IMPORTANT: For a cell-local
                        lockserver, you must set a storageClassName here for a StorageClass
                        that''s configured to only provision volumes in the Availability
                        Zone that corresponds to the Vitess cell. Default: Let the
                        operator choose.'
                      type: object
                    extraEnv:
                      description: ExtraEnv can optionally be used to override default
                        environment variables set by the operator, or pass additional
                        environment variables.
                      items:
                        type: object
                      type: array
                    extraFlags:
                      additionalProperties:
                        type: string
                      description: 'ExtraFlags can optionally be used to override
                        default flags set by the operator, or pass additional flags
                        to etcd. All entries must be key-value string pairs of the
                        form "flag": "value". The flag name should not have any prefix
                        (just "flag", not "-flag"). To set a boolean flag, set the
                        string value to either "true" or "false".'
                      type: object
                    extraVolumeMounts:
                      description: ExtraVolumeMounts can optionally be used to override
                        default Pod volumeMounts defined by the operator, or specify
                        additional mounts. Typically, these are used to mount volumes
                        defined through extraVolumes.
                      items:
                        type: object
                      type: array
                    extraVolumes:
                      description: ExtraVolumes can optionally be used to override
                        default Pod volumes defined by the operator, or provide additional
                        volumes to the Pod. Note that when adding a new volume, you
                        should usually also add a volumeMount to specify where in
                        each container's filesystem the volume should be mounted.
                      items:
                        type: object
                      type: array
                    image:
                      description: 'Image is the etcd server image (including version
                        tag) to deploy. Default: Let the operator choose.'
                      type: string
                    imagePullPolicy:
                      description: ImagePullPolicy specifies if/when to pull a container
                        image.
                      type: string
                    initContainers:
                      description: InitContainers can optionally be used to supply
                        extra init containers that will be run to completion one after
                        another before any app containers are started.
                      items:
                        type: object
                      type: array
                    resources:
                      description: 'Resources specify the compute resources to allocate
                        for each etcd member. Default: Let the operator choose.'
                      type: object
                  type: object
                external:
                  description: External specifies that we should connect to an existing
                    lockserver, instead of deploying our own. If this is set, all
                    other Lockserver fields are ignored.
                  properties:
                    address:
                      description: Address is the host:port of the lockserver client
                        endpoint.
                      type: string
                    implementation:
                      description: Implementation specifies which Vitess "topo" plugin
                        to use.
                      type: string
                    rootPath:
                      description: RootPath is a path prefix for all lockserver data
                        belonging to a given Vitess cluster. Multiple Vitess clusters
                        can share a lockserver as long as they have unique root paths.
                      type: string
                  required:
                  - implementation
                  - address
                  - rootPath
                  type: object
              type: object
            name:
              description: Name is the cell name as it should be provided to Vitess.
                Note that this is different from the VitessCell object's metadata.name,
                which is generated by the operator.
              maxLength: 25
              minLength: 1
              pattern: ^[a-z0-9]([a-z0-9]*[a-z0-9])?$
              type: string
            topologyReconciliation:
              description: TopologyReconciliation is inherited from the parent's VitessClusterSpec.
              properties:
                pruneCells:
                  description: 'PruneCells can be used to enable or disable pruning
                    of extraneous cells from topo records. Default: true'
                  type: boolean
                pruneKeyspaces:
                  description: 'PruneKeyspaces can be used to enable or disable pruning
                    of extraneous keyspaces from topo records. Default: true'
                  type: boolean
                pruneShardCells:
                  description: 'PruneShardCells can be used to enable or disable pruning
                    of extraneous shard cells from topo records. Default: true'
                  type: boolean
                pruneShards:
                  description: 'PruneShards can be used to enable or disable pruning
                    of extraneous shards from topo records. Default: true'
                  type: boolean
                pruneSrvKeyspaces:
                  description: 'PruneSrvKeyspaces can be used to enable or disable
                    pruning of extraneous serving keyspaces from topo records. Default:
                    true'
                  type: boolean
                pruneTablets:
                  description: 'PruneTablets can be used to enable or disable pruning
                    of extraneous tablets from topo records. Default: true'
                  type: boolean
                registerCells:
                  description: 'RegisterCells can be used to enable or disable registering
                    cells into topo records. Default: true'
                  type: boolean
                registerCellsAliases:
                  description: 'RegisterCellsAliases can be used to enable or disable
                    registering cells aliases into topo records. Default: true'
                  type: boolean
              type: object
            zone:
              description: Zone is the name of the Availability Zone that this Vitess
                Cell should run in. This value should match the value of the "failure-domain.beta.kubernetes.io/zone"
                label on the Kubernetes Nodes in that AZ. If the Kubernetes Nodes
                don't have such a label, leave this empty.
              type: string
          required:
          - name
          - globalLockserver
          - allCells
          type: object
        status:
          properties:
            gateway:
              description: Gateway is a summary of the status of vtgate in this cell.
              properties:
                available:
                  description: Available indicates whether the vtgate service is fully
                    available.
                  type: string
                serviceName:
                  description: ServiceName is the name of the Service for this cell's
                    vtgate.
                  type: string
              type: object
            idle:
              description: Idle is a condition indicating whether the cell can be
                turned down. If Idle is True, there are no keyspaces deployed in the
                cell, so it should be safe to turn down the cell.
              type: string
            keyspaces:
              additionalProperties:
                type: object
              description: Keyspaces is a summary of keyspaces deployed in this cell.
                This summary could be empty either if there are no keyspaces, or if
                the controller failed to read the current state. Use the Idle condition
                to distinguish these scenarios when the difference matters.
              type: object
            lockserver:
              description: Lockserver is a summary of the status of the cell-local
                lockserver.
              properties:
                etcd:
                  description: Etcd is the status of the EtcdCluster, if we were asked
                    to deploy one.
                  properties:
                    available:
                      description: Available is a condition that indicates whether
                        the cluster is able to serve queries.
                      type: string
                    clientServiceName:
                      description: ClientServiceName is the name of the Service for
                        etcd client connections.
                      type: string
                    observedGeneration:
                      description: The generation observed by the controller.
                      format: int64
                      type: integer
                  type: object
              type: object
            observedGeneration:
              description: The generation observed by the controller.
              format: int64
              type: integer
          type: object
  version: v2
  versions:
  - name: v2
    served: true
    storage: true
