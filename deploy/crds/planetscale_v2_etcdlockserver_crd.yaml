apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: etcdlockservers.planetscale.com
spec:
  group: planetscale.com
  names:
    kind: EtcdLockserver
    listKind: EtcdLockserverList
    plural: etcdlockservers
    shortNames:
    - etcdls
    singular: etcdlockserver
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            advertisePeerURLs:
              description: 'AdvertisePeerURLs can optionally be used to override the
                URLs that etcd members use to find each other for peer-to-peer connections.  If
                specified, the list must contain exactly 3 entries, one for each etcd
                member index (1,2,3) respectively.  Default: Build peer URLs automatically
                based on Kubernetes built-in DNS.'
              items:
                type: string
              maxItems: 3
              minItems: 3
              type: array
            affinity:
              description: 'Affinity allows you to set rules that constrain the scheduling
                of your Etcd pods. WARNING: These affinity rules will override all
                default affinities that we set; in turn, we can''t guarantee optimal
                scheduling of your pods if you choose to set this field.'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: Annotations can optionally be used to attach custom annotations
                to Pods created for this component.
              type: object
            createClientService:
              description: 'CreateClientService sets whether to create a Service for
                the client port of etcd member Pods.  Note: Disabling this will NOT
                delete a Service that was previously created.  Default: true'
              type: boolean
            createPDB:
              description: 'CreatePDB sets whether to create a PodDisruptionBudget
                (PDB) for etcd member Pods.  Note: Disabling this will NOT delete
                a PDB that was previously created.  Default: true'
              type: boolean
            createPeerService:
              description: 'CreatePeerService sets whether to create a Service for
                the peer port of etcd member Pods.  Note: Disabling this will NOT
                delete a Service that was previously created.  Default: true'
              type: boolean
            dataVolumeClaimTemplate:
              description: 'DataVolumeClaimTemplate configures the PersistentVolumeClaims
                that will be created for each etcd instance to store its data files.
                This field is required.  IMPORTANT: For a cell-local lockserver, you
                must set a storageClassName here for a StorageClass that''s configured
                to only provision volumes in the Availability Zone that corresponds
                to the Vitess cell. Default: Let the operator choose.'
              type: object
            extraEnv:
              description: ExtraEnv can optionally be used to override default environment
                variables set by the operator, or pass additional environment variables.
              items:
                type: object
              type: array
            extraFlags:
              additionalProperties:
                type: string
              description: 'ExtraFlags can optionally be used to override default
                flags set by the operator, or pass additional flags to etcd. All entries
                must be key-value string pairs of the form "flag": "value". The flag
                name should not have any prefix (just "flag", not "-flag"). To set
                a boolean flag, set the string value to either "true" or "false".'
              type: object
            extraLabels:
              additionalProperties:
                type: string
              description: ExtraLabels can optionally be used to attach custom labels
                to Pods created for this component.
              type: object
            extraVolumeMounts:
              description: ExtraVolumeMounts can optionally be used to override default
                Pod volumeMounts defined by the operator, or specify additional mounts.
                Typically, these are used to mount volumes defined through extraVolumes.
              items:
                type: object
              type: array
            extraVolumes:
              description: ExtraVolumes can optionally be used to override default
                Pod volumes defined by the operator, or provide additional volumes
                to the Pod. Note that when adding a new volume, you should usually
                also add a volumeMount to specify where in each container's filesystem
                the volume should be mounted.
              items:
                type: object
              type: array
            image:
              description: 'Image is the etcd server image (including version tag)
                to deploy. Default: Let the operator choose.'
              type: string
            imagePullPolicy:
              description: ImagePullPolicy specifies if/when to pull a container image.
              type: string
            initContainers:
              description: InitContainers can optionally be used to supply extra init
                containers that will be run to completion one after another before
                any app containers are started.
              items:
                type: object
              type: array
            localMemberIndex:
              description: 'LocalMemberIndex can optionally be used to specify that
                only one etcd member should actually be deployed. This can be used
                to spread members across multiple Kubernetes clusters by configuring
                the EtcdLockserver CRD in each cluster to deploy a different member
                index. If specified, the index must be 1, 2, or 3.  Default: Deploy
                all etcd members locally.'
              format: int32
              maximum: 3
              minimum: 1
              type: integer
            resources:
              description: 'Resources specify the compute resources to allocate for
                each etcd member. Default: Let the operator choose.'
              type: object
            sidecarContainers:
              description: SidecarContainers can optionally be used to supply extra
                containers that run alongside the main containers.
              items:
                type: object
              type: array
            zone:
              description: Zone is the name of the Availability Zone that this lockserver
                should run in. This value should match the value of the "failure-domain.beta.kubernetes.io/zone"
                label on the Kubernetes Nodes in that AZ. If the Kubernetes Nodes
                don't have such a label, leave this empty.
              type: string
          type: object
        status:
          properties:
            available:
              description: Available is a condition that indicates whether the cluster
                is able to serve queries.
              type: string
            clientServiceName:
              description: ClientServiceName is the name of the Service for etcd client
                connections.
              type: string
            observedGeneration:
              description: The generation observed by the controller.
              format: int64
              type: integer
          type: object
  version: v2
  versions:
  - name: v2
    served: true
    storage: true
