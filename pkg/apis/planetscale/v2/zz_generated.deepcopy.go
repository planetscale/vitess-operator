// +build !ignore_autogenerated

// Code generated by operator-sdk-v0.10.0. DO NOT EDIT.

package v2

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzblobBackupLocation) DeepCopyInto(out *AzblobBackupLocation) {
	*out = *in
	out.AuthSecret = in.AuthSecret
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzblobBackupLocation.
func (in *AzblobBackupLocation) DeepCopy() *AzblobBackupLocation {
	if in == nil {
		return nil
	}
	out := new(AzblobBackupLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterBackupSpec) DeepCopyInto(out *ClusterBackupSpec) {
	*out = *in
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]VitessBackupLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterBackupSpec.
func (in *ClusterBackupSpec) DeepCopy() *ClusterBackupSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdLockserver) DeepCopyInto(out *EtcdLockserver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdLockserver.
func (in *EtcdLockserver) DeepCopy() *EtcdLockserver {
	if in == nil {
		return nil
	}
	out := new(EtcdLockserver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EtcdLockserver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdLockserverList) DeepCopyInto(out *EtcdLockserverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EtcdLockserver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdLockserverList.
func (in *EtcdLockserverList) DeepCopy() *EtcdLockserverList {
	if in == nil {
		return nil
	}
	out := new(EtcdLockserverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EtcdLockserverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdLockserverSpec) DeepCopyInto(out *EtcdLockserverSpec) {
	*out = *in
	in.EtcdLockserverTemplate.DeepCopyInto(&out.EtcdLockserverTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdLockserverSpec.
func (in *EtcdLockserverSpec) DeepCopy() *EtcdLockserverSpec {
	if in == nil {
		return nil
	}
	out := new(EtcdLockserverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdLockserverStatus) DeepCopyInto(out *EtcdLockserverStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdLockserverStatus.
func (in *EtcdLockserverStatus) DeepCopy() *EtcdLockserverStatus {
	if in == nil {
		return nil
	}
	out := new(EtcdLockserverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdLockserverTemplate) DeepCopyInto(out *EtcdLockserverTemplate) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	in.DataVolumeClaimTemplate.DeepCopyInto(&out.DataVolumeClaimTemplate)
	if in.ExtraFlags != nil {
		in, out := &in.ExtraFlags, &out.ExtraFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumes != nil {
		in, out := &in.ExtraVolumes, &out.ExtraVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumeMounts != nil {
		in, out := &in.ExtraVolumeMounts, &out.ExtraVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraLabels != nil {
		in, out := &in.ExtraLabels, &out.ExtraLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdLockserverTemplate.
func (in *EtcdLockserverTemplate) DeepCopy() *EtcdLockserverTemplate {
	if in == nil {
		return nil
	}
	out := new(EtcdLockserverTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatastore) DeepCopyInto(out *ExternalDatastore) {
	*out = *in
	out.CredentialsSecret = in.CredentialsSecret
	if in.ServerCACertSecret != nil {
		in, out := &in.ServerCACertSecret, &out.ServerCACertSecret
		*out = new(SecretSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatastore.
func (in *ExternalDatastore) DeepCopy() *ExternalDatastore {
	if in == nil {
		return nil
	}
	out := new(ExternalDatastore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCSBackupLocation) DeepCopyInto(out *GCSBackupLocation) {
	*out = *in
	if in.AuthSecret != nil {
		in, out := &in.AuthSecret, &out.AuthSecret
		*out = new(SecretSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCSBackupLocation.
func (in *GCSBackupLocation) DeepCopy() *GCSBackupLocation {
	if in == nil {
		return nil
	}
	out := new(GCSBackupLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockserverSpec) DeepCopyInto(out *LockserverSpec) {
	*out = *in
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(VitessLockserverParams)
		**out = **in
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(EtcdLockserverTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockserverSpec.
func (in *LockserverSpec) DeepCopy() *LockserverSpec {
	if in == nil {
		return nil
	}
	out := new(LockserverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockserverStatus) DeepCopyInto(out *LockserverStatus) {
	*out = *in
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(EtcdLockserverStatus)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockserverStatus.
func (in *LockserverStatus) DeepCopy() *LockserverStatus {
	if in == nil {
		return nil
	}
	out := new(LockserverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqldImage) DeepCopyInto(out *MysqldImage) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqldImage.
func (in *MysqldImage) DeepCopy() *MysqldImage {
	if in == nil {
		return nil
	}
	out := new(MysqldImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqldSpec) DeepCopyInto(out *MysqldSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqldSpec.
func (in *MysqldSpec) DeepCopy() *MysqldSpec {
	if in == nil {
		return nil
	}
	out := new(MysqldSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrphanStatus) DeepCopyInto(out *OrphanStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrphanStatus.
func (in *OrphanStatus) DeepCopy() *OrphanStatus {
	if in == nil {
		return nil
	}
	out := new(OrphanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupLocation) DeepCopyInto(out *S3BackupLocation) {
	*out = *in
	if in.AuthSecret != nil {
		in, out := &in.AuthSecret, &out.AuthSecret
		*out = new(SecretSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupLocation.
func (in *S3BackupLocation) DeepCopy() *S3BackupLocation {
	if in == nil {
		return nil
	}
	out := new(S3BackupLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretSource) DeepCopyInto(out *SecretSource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretSource.
func (in *SecretSource) DeepCopy() *SecretSource {
	if in == nil {
		return nil
	}
	out := new(SecretSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardBackupLocationStatus) DeepCopyInto(out *ShardBackupLocationStatus) {
	*out = *in
	if in.LatestCompleteBackupTime != nil {
		in, out := &in.LatestCompleteBackupTime, &out.LatestCompleteBackupTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardBackupLocationStatus.
func (in *ShardBackupLocationStatus) DeepCopy() *ShardBackupLocationStatus {
	if in == nil {
		return nil
	}
	out := new(ShardBackupLocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopoReconcileConfig) DeepCopyInto(out *TopoReconcileConfig) {
	*out = *in
	if in.RegisterCellsAliases != nil {
		in, out := &in.RegisterCellsAliases, &out.RegisterCellsAliases
		*out = new(bool)
		**out = **in
	}
	if in.RegisterCells != nil {
		in, out := &in.RegisterCells, &out.RegisterCells
		*out = new(bool)
		**out = **in
	}
	if in.PruneCells != nil {
		in, out := &in.PruneCells, &out.PruneCells
		*out = new(bool)
		**out = **in
	}
	if in.PruneKeyspaces != nil {
		in, out := &in.PruneKeyspaces, &out.PruneKeyspaces
		*out = new(bool)
		**out = **in
	}
	if in.PruneSrvKeyspaces != nil {
		in, out := &in.PruneSrvKeyspaces, &out.PruneSrvKeyspaces
		*out = new(bool)
		**out = **in
	}
	if in.PruneShards != nil {
		in, out := &in.PruneShards, &out.PruneShards
		*out = new(bool)
		**out = **in
	}
	if in.PruneShardCells != nil {
		in, out := &in.PruneShardCells, &out.PruneShardCells
		*out = new(bool)
		**out = **in
	}
	if in.PruneTablets != nil {
		in, out := &in.PruneTablets, &out.PruneTablets
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopoReconcileConfig.
func (in *TopoReconcileConfig) DeepCopy() *TopoReconcileConfig {
	if in == nil {
		return nil
	}
	out := new(TopoReconcileConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackup) DeepCopyInto(out *VitessBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackup.
func (in *VitessBackup) DeepCopy() *VitessBackup {
	if in == nil {
		return nil
	}
	out := new(VitessBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupList) DeepCopyInto(out *VitessBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VitessBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupList.
func (in *VitessBackupList) DeepCopy() *VitessBackupList {
	if in == nil {
		return nil
	}
	out := new(VitessBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupLocation) DeepCopyInto(out *VitessBackupLocation) {
	*out = *in
	if in.GCS != nil {
		in, out := &in.GCS, &out.GCS
		*out = new(GCSBackupLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3BackupLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Azblob != nil {
		in, out := &in.Azblob, &out.Azblob
		*out = new(AzblobBackupLocation)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(v1.VolumeSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupLocation.
func (in *VitessBackupLocation) DeepCopy() *VitessBackupLocation {
	if in == nil {
		return nil
	}
	out := new(VitessBackupLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupSpec) DeepCopyInto(out *VitessBackupSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupSpec.
func (in *VitessBackupSpec) DeepCopy() *VitessBackupSpec {
	if in == nil {
		return nil
	}
	out := new(VitessBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupStatus) DeepCopyInto(out *VitessBackupStatus) {
	*out = *in
	in.StartTime.DeepCopyInto(&out.StartTime)
	in.FinishedTime.DeepCopyInto(&out.FinishedTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupStatus.
func (in *VitessBackupStatus) DeepCopy() *VitessBackupStatus {
	if in == nil {
		return nil
	}
	out := new(VitessBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupStorage) DeepCopyInto(out *VitessBackupStorage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupStorage.
func (in *VitessBackupStorage) DeepCopy() *VitessBackupStorage {
	if in == nil {
		return nil
	}
	out := new(VitessBackupStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessBackupStorage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupStorageList) DeepCopyInto(out *VitessBackupStorageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VitessBackupStorage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupStorageList.
func (in *VitessBackupStorageList) DeepCopy() *VitessBackupStorageList {
	if in == nil {
		return nil
	}
	out := new(VitessBackupStorageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessBackupStorageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupStorageSpec) DeepCopyInto(out *VitessBackupStorageSpec) {
	*out = *in
	in.Location.DeepCopyInto(&out.Location)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupStorageSpec.
func (in *VitessBackupStorageSpec) DeepCopy() *VitessBackupStorageSpec {
	if in == nil {
		return nil
	}
	out := new(VitessBackupStorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessBackupStorageStatus) DeepCopyInto(out *VitessBackupStorageStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessBackupStorageStatus.
func (in *VitessBackupStorageStatus) DeepCopy() *VitessBackupStorageStatus {
	if in == nil {
		return nil
	}
	out := new(VitessBackupStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCell) DeepCopyInto(out *VitessCell) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCell.
func (in *VitessCell) DeepCopy() *VitessCell {
	if in == nil {
		return nil
	}
	out := new(VitessCell)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessCell) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellGatewaySpec) DeepCopyInto(out *VitessCellGatewaySpec) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	in.Authentication.DeepCopyInto(&out.Authentication)
	if in.SecureTransport != nil {
		in, out := &in.SecureTransport, &out.SecureTransport
		*out = new(VitessGatewaySecureTransport)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtraFlags != nil {
		in, out := &in.ExtraFlags, &out.ExtraFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumes != nil {
		in, out := &in.ExtraVolumes, &out.ExtraVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumeMounts != nil {
		in, out := &in.ExtraVolumeMounts, &out.ExtraVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraLabels != nil {
		in, out := &in.ExtraLabels, &out.ExtraLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellGatewaySpec.
func (in *VitessCellGatewaySpec) DeepCopy() *VitessCellGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(VitessCellGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellGatewayStatus) DeepCopyInto(out *VitessCellGatewayStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellGatewayStatus.
func (in *VitessCellGatewayStatus) DeepCopy() *VitessCellGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(VitessCellGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellImages) DeepCopyInto(out *VitessCellImages) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellImages.
func (in *VitessCellImages) DeepCopy() *VitessCellImages {
	if in == nil {
		return nil
	}
	out := new(VitessCellImages)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellKeyspaceStatus) DeepCopyInto(out *VitessCellKeyspaceStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellKeyspaceStatus.
func (in *VitessCellKeyspaceStatus) DeepCopy() *VitessCellKeyspaceStatus {
	if in == nil {
		return nil
	}
	out := new(VitessCellKeyspaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellList) DeepCopyInto(out *VitessCellList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VitessCell, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellList.
func (in *VitessCellList) DeepCopy() *VitessCellList {
	if in == nil {
		return nil
	}
	out := new(VitessCellList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessCellList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellSpec) DeepCopyInto(out *VitessCellSpec) {
	*out = *in
	in.VitessCellTemplate.DeepCopyInto(&out.VitessCellTemplate)
	out.GlobalLockserver = in.GlobalLockserver
	if in.AllCells != nil {
		in, out := &in.AllCells, &out.AllCells
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Images = in.Images
	if in.ExtraVitessFlags != nil {
		in, out := &in.ExtraVitessFlags, &out.ExtraVitessFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.ImagePullPolicies = in.ImagePullPolicies
	if in.TopologyReconciliation != nil {
		in, out := &in.TopologyReconciliation, &out.TopologyReconciliation
		*out = new(TopoReconcileConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellSpec.
func (in *VitessCellSpec) DeepCopy() *VitessCellSpec {
	if in == nil {
		return nil
	}
	out := new(VitessCellSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellStatus) DeepCopyInto(out *VitessCellStatus) {
	*out = *in
	in.Lockserver.DeepCopyInto(&out.Lockserver)
	out.Gateway = in.Gateway
	if in.Keyspaces != nil {
		in, out := &in.Keyspaces, &out.Keyspaces
		*out = make(map[string]VitessCellKeyspaceStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellStatus.
func (in *VitessCellStatus) DeepCopy() *VitessCellStatus {
	if in == nil {
		return nil
	}
	out := new(VitessCellStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCellTemplate) DeepCopyInto(out *VitessCellTemplate) {
	*out = *in
	in.Lockserver.DeepCopyInto(&out.Lockserver)
	in.Gateway.DeepCopyInto(&out.Gateway)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCellTemplate.
func (in *VitessCellTemplate) DeepCopy() *VitessCellTemplate {
	if in == nil {
		return nil
	}
	out := new(VitessCellTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessCluster) DeepCopyInto(out *VitessCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessCluster.
func (in *VitessCluster) DeepCopy() *VitessCluster {
	if in == nil {
		return nil
	}
	out := new(VitessCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessClusterCellStatus) DeepCopyInto(out *VitessClusterCellStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessClusterCellStatus.
func (in *VitessClusterCellStatus) DeepCopy() *VitessClusterCellStatus {
	if in == nil {
		return nil
	}
	out := new(VitessClusterCellStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessClusterKeyspaceStatus) DeepCopyInto(out *VitessClusterKeyspaceStatus) {
	*out = *in
	if in.Cells != nil {
		in, out := &in.Cells, &out.Cells
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessClusterKeyspaceStatus.
func (in *VitessClusterKeyspaceStatus) DeepCopy() *VitessClusterKeyspaceStatus {
	if in == nil {
		return nil
	}
	out := new(VitessClusterKeyspaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessClusterList) DeepCopyInto(out *VitessClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VitessCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessClusterList.
func (in *VitessClusterList) DeepCopy() *VitessClusterList {
	if in == nil {
		return nil
	}
	out := new(VitessClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessClusterSpec) DeepCopyInto(out *VitessClusterSpec) {
	*out = *in
	in.Images.DeepCopyInto(&out.Images)
	out.ImagePullPolicies = in.ImagePullPolicies
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(ClusterBackupSpec)
		(*in).DeepCopyInto(*out)
	}
	in.GlobalLockserver.DeepCopyInto(&out.GlobalLockserver)
	if in.VitessDashboard != nil {
		in, out := &in.VitessDashboard, &out.VitessDashboard
		*out = new(VitessDashboardSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Cells != nil {
		in, out := &in.Cells, &out.Cells
		*out = make([]VitessCellTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Keyspaces != nil {
		in, out := &in.Keyspaces, &out.Keyspaces
		*out = make([]VitessKeyspaceTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVitessFlags != nil {
		in, out := &in.ExtraVitessFlags, &out.ExtraVitessFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TopologyReconciliation != nil {
		in, out := &in.TopologyReconciliation, &out.TopologyReconciliation
		*out = new(TopoReconcileConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessClusterSpec.
func (in *VitessClusterSpec) DeepCopy() *VitessClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VitessClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessClusterStatus) DeepCopyInto(out *VitessClusterStatus) {
	*out = *in
	in.GlobalLockserver.DeepCopyInto(&out.GlobalLockserver)
	out.VitessDashboard = in.VitessDashboard
	if in.Cells != nil {
		in, out := &in.Cells, &out.Cells
		*out = make(map[string]*VitessClusterCellStatus, len(*in))
		for key, val := range *in {
			var outVal *VitessClusterCellStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(VitessClusterCellStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Keyspaces != nil {
		in, out := &in.Keyspaces, &out.Keyspaces
		*out = make(map[string]*VitessClusterKeyspaceStatus, len(*in))
		for key, val := range *in {
			var outVal *VitessClusterKeyspaceStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(VitessClusterKeyspaceStatus)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.OrphanedCells != nil {
		in, out := &in.OrphanedCells, &out.OrphanedCells
		*out = make(map[string]*OrphanStatus, len(*in))
		for key, val := range *in {
			var outVal *OrphanStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(OrphanStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OrphanedKeyspaces != nil {
		in, out := &in.OrphanedKeyspaces, &out.OrphanedKeyspaces
		*out = make(map[string]*OrphanStatus, len(*in))
		for key, val := range *in {
			var outVal *OrphanStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(OrphanStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessClusterStatus.
func (in *VitessClusterStatus) DeepCopy() *VitessClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VitessClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessDashboardSpec) DeepCopyInto(out *VitessDashboardSpec) {
	*out = *in
	if in.Cells != nil {
		in, out := &in.Cells, &out.Cells
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ExtraFlags != nil {
		in, out := &in.ExtraFlags, &out.ExtraFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumes != nil {
		in, out := &in.ExtraVolumes, &out.ExtraVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumeMounts != nil {
		in, out := &in.ExtraVolumeMounts, &out.ExtraVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraLabels != nil {
		in, out := &in.ExtraLabels, &out.ExtraLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessDashboardSpec.
func (in *VitessDashboardSpec) DeepCopy() *VitessDashboardSpec {
	if in == nil {
		return nil
	}
	out := new(VitessDashboardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessDashboardStatus) DeepCopyInto(out *VitessDashboardStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessDashboardStatus.
func (in *VitessDashboardStatus) DeepCopy() *VitessDashboardStatus {
	if in == nil {
		return nil
	}
	out := new(VitessDashboardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessGatewayAuthentication) DeepCopyInto(out *VitessGatewayAuthentication) {
	*out = *in
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(VitessGatewayStaticAuthentication)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessGatewayAuthentication.
func (in *VitessGatewayAuthentication) DeepCopy() *VitessGatewayAuthentication {
	if in == nil {
		return nil
	}
	out := new(VitessGatewayAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessGatewaySecureTransport) DeepCopyInto(out *VitessGatewaySecureTransport) {
	*out = *in
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(VitessGatewayTLSSecureTransport)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessGatewaySecureTransport.
func (in *VitessGatewaySecureTransport) DeepCopy() *VitessGatewaySecureTransport {
	if in == nil {
		return nil
	}
	out := new(VitessGatewaySecureTransport)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessGatewayStaticAuthentication) DeepCopyInto(out *VitessGatewayStaticAuthentication) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(SecretSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessGatewayStaticAuthentication.
func (in *VitessGatewayStaticAuthentication) DeepCopy() *VitessGatewayStaticAuthentication {
	if in == nil {
		return nil
	}
	out := new(VitessGatewayStaticAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessGatewayTLSSecureTransport) DeepCopyInto(out *VitessGatewayTLSSecureTransport) {
	*out = *in
	if in.ClientCACertSecret != nil {
		in, out := &in.ClientCACertSecret, &out.ClientCACertSecret
		*out = new(SecretSource)
		**out = **in
	}
	if in.CertSecret != nil {
		in, out := &in.CertSecret, &out.CertSecret
		*out = new(SecretSource)
		**out = **in
	}
	if in.KeySecret != nil {
		in, out := &in.KeySecret, &out.KeySecret
		*out = new(SecretSource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessGatewayTLSSecureTransport.
func (in *VitessGatewayTLSSecureTransport) DeepCopy() *VitessGatewayTLSSecureTransport {
	if in == nil {
		return nil
	}
	out := new(VitessGatewayTLSSecureTransport)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessImagePullPolicies) DeepCopyInto(out *VitessImagePullPolicies) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessImagePullPolicies.
func (in *VitessImagePullPolicies) DeepCopy() *VitessImagePullPolicies {
	if in == nil {
		return nil
	}
	out := new(VitessImagePullPolicies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessImages) DeepCopyInto(out *VitessImages) {
	*out = *in
	if in.Mysqld != nil {
		in, out := &in.Mysqld, &out.Mysqld
		*out = new(MysqldImage)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessImages.
func (in *VitessImages) DeepCopy() *VitessImages {
	if in == nil {
		return nil
	}
	out := new(VitessImages)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyRange) DeepCopyInto(out *VitessKeyRange) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyRange.
func (in *VitessKeyRange) DeepCopy() *VitessKeyRange {
	if in == nil {
		return nil
	}
	out := new(VitessKeyRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspace) DeepCopyInto(out *VitessKeyspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspace.
func (in *VitessKeyspace) DeepCopy() *VitessKeyspace {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessKeyspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceCustomPartitioning) DeepCopyInto(out *VitessKeyspaceCustomPartitioning) {
	*out = *in
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]VitessKeyspaceKeyRangeShard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceCustomPartitioning.
func (in *VitessKeyspaceCustomPartitioning) DeepCopy() *VitessKeyspaceCustomPartitioning {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceCustomPartitioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceEqualPartitioning) DeepCopyInto(out *VitessKeyspaceEqualPartitioning) {
	*out = *in
	in.ShardTemplate.DeepCopyInto(&out.ShardTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceEqualPartitioning.
func (in *VitessKeyspaceEqualPartitioning) DeepCopy() *VitessKeyspaceEqualPartitioning {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceEqualPartitioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceImages) DeepCopyInto(out *VitessKeyspaceImages) {
	*out = *in
	if in.Mysqld != nil {
		in, out := &in.Mysqld, &out.Mysqld
		*out = new(MysqldImage)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceImages.
func (in *VitessKeyspaceImages) DeepCopy() *VitessKeyspaceImages {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceImages)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceKeyRangeShard) DeepCopyInto(out *VitessKeyspaceKeyRangeShard) {
	*out = *in
	out.KeyRange = in.KeyRange
	in.VitessShardTemplate.DeepCopyInto(&out.VitessShardTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceKeyRangeShard.
func (in *VitessKeyspaceKeyRangeShard) DeepCopy() *VitessKeyspaceKeyRangeShard {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceKeyRangeShard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceList) DeepCopyInto(out *VitessKeyspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VitessKeyspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceList.
func (in *VitessKeyspaceList) DeepCopy() *VitessKeyspaceList {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessKeyspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspacePartitioning) DeepCopyInto(out *VitessKeyspacePartitioning) {
	*out = *in
	if in.Equal != nil {
		in, out := &in.Equal, &out.Equal
		*out = new(VitessKeyspaceEqualPartitioning)
		(*in).DeepCopyInto(*out)
	}
	if in.Custom != nil {
		in, out := &in.Custom, &out.Custom
		*out = new(VitessKeyspaceCustomPartitioning)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspacePartitioning.
func (in *VitessKeyspacePartitioning) DeepCopy() *VitessKeyspacePartitioning {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspacePartitioning)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceShardStatus) DeepCopyInto(out *VitessKeyspaceShardStatus) {
	*out = *in
	if in.Cells != nil {
		in, out := &in.Cells, &out.Cells
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceShardStatus.
func (in *VitessKeyspaceShardStatus) DeepCopy() *VitessKeyspaceShardStatus {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceShardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceSpec) DeepCopyInto(out *VitessKeyspaceSpec) {
	*out = *in
	in.VitessKeyspaceTemplate.DeepCopyInto(&out.VitessKeyspaceTemplate)
	out.GlobalLockserver = in.GlobalLockserver
	in.Images.DeepCopyInto(&out.Images)
	out.ImagePullPolicies = in.ImagePullPolicies
	if in.ZoneMap != nil {
		in, out := &in.ZoneMap, &out.ZoneMap
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BackupLocations != nil {
		in, out := &in.BackupLocations, &out.BackupLocations
		*out = make([]VitessBackupLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVitessFlags != nil {
		in, out := &in.ExtraVitessFlags, &out.ExtraVitessFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TopologyReconciliation != nil {
		in, out := &in.TopologyReconciliation, &out.TopologyReconciliation
		*out = new(TopoReconcileConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceSpec.
func (in *VitessKeyspaceSpec) DeepCopy() *VitessKeyspaceSpec {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceStatus) DeepCopyInto(out *VitessKeyspaceStatus) {
	*out = *in
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make(map[string]*VitessKeyspaceShardStatus, len(*in))
		for key, val := range *in {
			var outVal *VitessKeyspaceShardStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(VitessKeyspaceShardStatus)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.OrphanedShards != nil {
		in, out := &in.OrphanedShards, &out.OrphanedShards
		*out = make(map[string]*OrphanStatus, len(*in))
		for key, val := range *in {
			var outVal *OrphanStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(OrphanStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceStatus.
func (in *VitessKeyspaceStatus) DeepCopy() *VitessKeyspaceStatus {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessKeyspaceTemplate) DeepCopyInto(out *VitessKeyspaceTemplate) {
	*out = *in
	if in.Partitionings != nil {
		in, out := &in.Partitionings, &out.Partitionings
		*out = make([]VitessKeyspacePartitioning, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessKeyspaceTemplate.
func (in *VitessKeyspaceTemplate) DeepCopy() *VitessKeyspaceTemplate {
	if in == nil {
		return nil
	}
	out := new(VitessKeyspaceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessLockserverParams) DeepCopyInto(out *VitessLockserverParams) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessLockserverParams.
func (in *VitessLockserverParams) DeepCopy() *VitessLockserverParams {
	if in == nil {
		return nil
	}
	out := new(VitessLockserverParams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessReplicationSpec) DeepCopyInto(out *VitessReplicationSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessReplicationSpec.
func (in *VitessReplicationSpec) DeepCopy() *VitessReplicationSpec {
	if in == nil {
		return nil
	}
	out := new(VitessReplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShard) DeepCopyInto(out *VitessShard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShard.
func (in *VitessShard) DeepCopy() *VitessShard {
	if in == nil {
		return nil
	}
	out := new(VitessShard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessShard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShardCondition) DeepCopyInto(out *VitessShardCondition) {
	*out = *in
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShardCondition.
func (in *VitessShardCondition) DeepCopy() *VitessShardCondition {
	if in == nil {
		return nil
	}
	out := new(VitessShardCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShardList) DeepCopyInto(out *VitessShardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VitessShard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShardList.
func (in *VitessShardList) DeepCopy() *VitessShardList {
	if in == nil {
		return nil
	}
	out := new(VitessShardList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VitessShardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShardSpec) DeepCopyInto(out *VitessShardSpec) {
	*out = *in
	in.VitessShardTemplate.DeepCopyInto(&out.VitessShardTemplate)
	if in.ZoneMap != nil {
		in, out := &in.ZoneMap, &out.ZoneMap
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Images.DeepCopyInto(&out.Images)
	out.ImagePullPolicies = in.ImagePullPolicies
	out.KeyRange = in.KeyRange
	out.GlobalLockserver = in.GlobalLockserver
	if in.BackupLocations != nil {
		in, out := &in.BackupLocations, &out.BackupLocations
		*out = make([]VitessBackupLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVitessFlags != nil {
		in, out := &in.ExtraVitessFlags, &out.ExtraVitessFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TopologyReconciliation != nil {
		in, out := &in.TopologyReconciliation, &out.TopologyReconciliation
		*out = new(TopoReconcileConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShardSpec.
func (in *VitessShardSpec) DeepCopy() *VitessShardSpec {
	if in == nil {
		return nil
	}
	out := new(VitessShardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShardStatus) DeepCopyInto(out *VitessShardStatus) {
	*out = *in
	if in.Tablets != nil {
		in, out := &in.Tablets, &out.Tablets
		*out = make(map[string]*VitessTabletStatus, len(*in))
		for key, val := range *in {
			var outVal *VitessTabletStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(VitessTabletStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OrphanedTablets != nil {
		in, out := &in.OrphanedTablets, &out.OrphanedTablets
		*out = make(map[string]*OrphanStatus, len(*in))
		for key, val := range *in {
			var outVal *OrphanStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(OrphanStatus)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Cells != nil {
		in, out := &in.Cells, &out.Cells
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(map[VitessShardConditionType]*VitessShardCondition, len(*in))
		for key, val := range *in {
			var outVal *VitessShardCondition
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(VitessShardCondition)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.BackupLocations != nil {
		in, out := &in.BackupLocations, &out.BackupLocations
		*out = make([]*ShardBackupLocationStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ShardBackupLocationStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShardStatus.
func (in *VitessShardStatus) DeepCopy() *VitessShardStatus {
	if in == nil {
		return nil
	}
	out := new(VitessShardStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShardTabletPool) DeepCopyInto(out *VitessShardTabletPool) {
	*out = *in
	if in.DataVolumeClaimTemplate != nil {
		in, out := &in.DataVolumeClaimTemplate, &out.DataVolumeClaimTemplate
		*out = new(v1.PersistentVolumeClaimSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Vttablet.DeepCopyInto(&out.Vttablet)
	if in.Mysqld != nil {
		in, out := &in.Mysqld, &out.Mysqld
		*out = new(MysqldSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalDatastore != nil {
		in, out := &in.ExternalDatastore, &out.ExternalDatastore
		*out = new(ExternalDatastore)
		(*in).DeepCopyInto(*out)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraLabels != nil {
		in, out := &in.ExtraLabels, &out.ExtraLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumes != nil {
		in, out := &in.ExtraVolumes, &out.ExtraVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumeMounts != nil {
		in, out := &in.ExtraVolumeMounts, &out.ExtraVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShardTabletPool.
func (in *VitessShardTabletPool) DeepCopy() *VitessShardTabletPool {
	if in == nil {
		return nil
	}
	out := new(VitessShardTabletPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessShardTemplate) DeepCopyInto(out *VitessShardTemplate) {
	*out = *in
	if in.TabletPools != nil {
		in, out := &in.TabletPools, &out.TabletPools
		*out = make([]VitessShardTabletPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.DatabaseInitScriptSecret = in.DatabaseInitScriptSecret
	out.Replication = in.Replication
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessShardTemplate.
func (in *VitessShardTemplate) DeepCopy() *VitessShardTemplate {
	if in == nil {
		return nil
	}
	out := new(VitessShardTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VitessTabletStatus) DeepCopyInto(out *VitessTabletStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VitessTabletStatus.
func (in *VitessTabletStatus) DeepCopy() *VitessTabletStatus {
	if in == nil {
		return nil
	}
	out := new(VitessTabletStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VttabletSpec) DeepCopyInto(out *VttabletSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ExtraFlags != nil {
		in, out := &in.ExtraFlags, &out.ExtraFlags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VttabletSpec.
func (in *VttabletSpec) DeepCopy() *VttabletSpec {
	if in == nil {
		return nil
	}
	out := new(VttabletSpec)
	in.DeepCopyInto(out)
	return out
}
